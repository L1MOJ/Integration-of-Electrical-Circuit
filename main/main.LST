C51 COMPILER V9.54   MAIN                                                                  07/11/2022 09:58:58 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: F:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "reg52.h"
   2          #include <math.h>
   3          #include "intrins.h"
   4          #include "stdlib.h"
   5          #include "stdio.h"
   6          //#include "bmp.h"
   7          
   8          #include "oled.h"
   9          #include "LCD1602.h"
  10          #include "90614.h"
  11          bit FLAG1=0;
  12          sbit button1 = P2^2;            //按下测温
  13          sbit button2 = P0^7;            //模式选择  O表面 B体温
  14          sbit button3 = P2^3;            //报警温度
  15          sbit button4 = P2^4;            //选择时间1-12
  16          sbit YellowLed = P2^0;
  17          sbit WARN = P2^1;
  18          
  19          
  20          
  21          
  22          double BT;  //温度
  23          unsigned int temp[12][2]={0},pass,WARNING1=33;
  24          unsigned char i;
  25          //unsigned char btemp[5];
  26          
  27          void UART_init()    //
  28          {
  29   1            TMOD = 0x20;
  30   1            TH1 = 0xfd;
  31   1            TL1 = 0xfd;  //波特率9600
  32   1            SM0 = 0;  
  33   1            SM1 = 1;   // 串口工作方式1 10位异步
  34   1            REN = 1;  //串口允许接收
  35   1            TR1 = 1;
  36   1            EA = 1;
  37   1            ES =1 ;  //串口中断
  38   1      }
  39          
  40          void Delay(unsigned int xms)
  41          {
  42   1        unsigned char i, j;
  43   1        while(xms--)
  44   1        {
  45   2          i = 2;
  46   2          j = 139;
  47   2          do
  48   2          {
  49   3            while (--j);
  50   3          } while (--i);
  51   2        }
  52   1      }
  53          
  54          void Warning()
  55          { 
C51 COMPILER V9.54   MAIN                                                                  07/11/2022 09:58:58 PAGE 2   

  56   1        YellowLed=1;
  57   1        for(i=0;i<=100;i++)
  58   1        {
  59   2          WARN = 0;
  60   2          Delay(1);
  61   2          WARN = 1;
  62   2        }
  63   1      }
  64          
  65          void main()
  66          {
  67   1        unsigned char mode=1,time=0;                      //
  68   1      
  69   1        int a,b;
  70   1         UART_init();  //波特率9600
  71   1        //unsigned char l,n,num,lasty;
  72   1        //unsigned char a=0,b=0,c=127,d=63,e=0,f=0,g=0,h,j,k;
  73   1        WARN=0;
  74   1        LCD_Init();
  75   1        OLED_Init();
  76   1        OLED_Clear();
  77   1        LCD_ShowString(0,0,"WAITING");
  78   1        LCD_ShowString(2,4,"Hello L1MOJ");
  79   1        OLED_ShowString(20,50,"Hello L1MOJ",8);
  80   1        Delay_50ms(20);
  81   1      
  82   1      
  83   1      
  84   1        Delay_50ms(10);
  85   1        OLED_Clear();                                         //初始化
  86   1        
  87   1        Draw_dimond(43,30,20);
  88   1        OLED_DrawLine(43,10,93,21);
  89   1        Delay_50ms(10);
  90   1        OLED_DrawLine(43,50,93,39);
  91   1        Draw_Hline(65,85,30,30);
  92   1        Draw_dimond(93,30,10);
  93   1        Delay_50ms(10);
  94   1        OLED_ShowString(20,50,"Activated!",8);
  95   1        //Draw_Rectangle(1,1,126,62,5);
  96   1        Delay_50ms(20);                                       //初始化成功
  97   1        OLED_Clear();   
  98   1        LCD_Init();                   //LCD清屏，显示月日 用户USER１　时间０－12　　默认USER０　０点
  99   1      
 100   1        while(1)
 101   1        {
 102   2          WARN=0;
 103   2          if(button2==0)                          //两个模式选择
 104   2          {
 105   3            mode++;
 106   3            if(mode==3)
 107   3              mode=1;
 108   3          }
 109   2          
 110   2          if(button3==0)                          //报警温度
 111   2          {
 112   3            WARNING1++;
 113   3            if(WARNING1>36)
 114   3              WARNING1=33;
 115   3          }
 116   2          
 117   2          if(button4==0)                          //测温时间
C51 COMPILER V9.54   MAIN                                                                  07/11/2022 09:58:58 PAGE 3   

 118   2          {
 119   3            time++;
 120   3            if(time>11)
 121   3              time=0;
 122   3          }
 123   2          BT = Read_ObjectTemp();
 124   2          LCD_ShowString(1,7,"7.6 ");
 125   2          LCD_ShowString(2,1,"USER");
 126   2          LCD_ShowNum(2,5,0,1);
 127   2          LCD_ShowNum(1,15,time,2);   
 128   2          LCD_ShowNum(2,15,WARNING1,2); 
 129   2          if(mode==1)
 130   2          { 
 131   3            LCD_ShowString(1,1,"SURF");
 132   3          }
 133   2          if(mode==2)
 134   2          {
 135   3            BT = 0.2676*BT+2745;
 136   3            LCD_ShowString(1,1,"BODY");
 137   3          }
 138   2          
 139   2          
 140   2      
 141   2        /*  a = BT/1000;
 142   2          btemp[0]=a+'0';
 143   2          b=(BT-1000*a)/100;
 144   2          btemp[1]=b+'0';
 145   2          c=(BT-1000*a-100*b)/10;
 146   2          btemp[2]='.';
 147   2          btemp[3]=c+'0';
 148   2          d=BT-1000*a-100*b-10*c;
 149   2          btemp[4]=d+'0';*/                                   //ObjectT--string
 150   2          
 151   2          a = BT/100;
 152   2          b = BT-100*a;
 153   2      
 154   2          LCD_ShowNum(2,7,a,2);                             //温度显示
 155   2          LCD_ShowNum(2,10,b,2);
 156   2          LCD_ShowChar(2,9,'.');
 157   2          Delay_50ms(10);
 158   2        
 159   2          //LCD_ShowString(2,7,btemp);
 160   2          while(button1==0)                                 //按下测温
 161   2          { 
 162   3            temp[time][0] = a;
 163   3            temp[time][1] = b;
 164   3      
 165   3            //LCD_ShowString(2,7,"!!!!!");
 166   3              if(a>=WARNING1)
 167   3            {
 168   4              Warning();
 169   4              LCD_ShowString(2,7,"!!!!!");
 170   4              Delay_50ms(10);
 171   4            }
 172   3          }
 173   2                                            //按钮按下测温 保存该温度一段时间，在oled记录
 174   2          YellowLed=0;
 175   2          LCD_ShowChar(2,12,'C');
 176   2          //for(i=1;i<=12;i++)
 177   2          //{
 178   2          OLED_ShowNum(0,0,temp[0][0],2,16);                    //OLED显示
 179   2          OLED_ShowChar(16,0,'.',16);
C51 COMPILER V9.54   MAIN                                                                  07/11/2022 09:58:58 PAGE 4   

 180   2          OLED_ShowNum(18,0,temp[0][1],2,16);
 181   2      
 182   2          OLED_ShowNum(40,0,temp[1][0],2,16);
 183   2          OLED_ShowChar(56,0,'.',16);
 184   2          OLED_ShowNum(58,0,temp[1][1],2,16);   
 185   2          
 186   2          OLED_ShowNum(80,0,temp[2][0],2,16);
 187   2          OLED_ShowChar(96,0,'.',16);
 188   2          OLED_ShowNum(98,0,temp[2][1],2,16); 
 189   2          
 190   2          OLED_ShowNum(0,2,temp[3][0],2,16);
 191   2          OLED_ShowChar(16,2,'.',16);
 192   2          OLED_ShowNum(18,2,temp[3][1],2,16); 
 193   2      
 194   2          OLED_ShowNum(40,2,temp[4][0],2,16);
 195   2          OLED_ShowChar(56,2,'.',16);
 196   2          OLED_ShowNum(58,2,temp[4][1],2,16);   
 197   2          
 198   2          OLED_ShowNum(80,2,temp[5][0],2,16);
 199   2          OLED_ShowChar(96,2,'.',16);
 200   2          OLED_ShowNum(98,2,temp[5][1],2,16); 
 201   2          
 202   2          OLED_ShowNum(0,4,temp[6][0],2,16);                        
 203   2          OLED_ShowChar(16,4,'.',16);
 204   2          OLED_ShowNum(18,4,temp[6][1],2,16);
 205   2          
 206   2          OLED_ShowNum(40,4,temp[7][0],2,16);
 207   2          OLED_ShowChar(56,4,'.',16);
 208   2          OLED_ShowNum(58,4,temp[7][1],2,16);   
 209   2          
 210   2          OLED_ShowNum(80,4,temp[8][0],2,16);
 211   2          OLED_ShowChar(96,4,'.',16);
 212   2          OLED_ShowNum(98,4,temp[8][1],2,16); 
 213   2          
 214   2          OLED_ShowNum(0,6,temp[9][0],2,16);
 215   2          OLED_ShowChar(16,6,'.',16);
 216   2          OLED_ShowNum(18,6,temp[9][1],2,16); 
 217   2      
 218   2          OLED_ShowNum(40,6,temp[10][0],2,16);
 219   2          OLED_ShowChar(56,6,'.',16);
 220   2          OLED_ShowNum(58,6,temp[10][1],2,16);    
 221   2          
 222   2          OLED_ShowNum(80,6,temp[11][0],2,16);
 223   2          OLED_ShowChar(96,6,'.',16);
 224   2          OLED_ShowNum(98,6,temp[11][1],2,16);  
 225   2        }
 226   1      }
 227          
 228          void UART_INTERRUPT() interrupt 4                                   //中断，蓝牙传输
 229          {        
 230   1                    pass = SBUF;
 231   1                    RI = 0;   
 232   1                    if(pass==0)
 233   1                    {
 234   2                      SBUF = temp[0][0];
 235   2                      while(!TI);
 236   2                      TI = 0;   
 237   2                      SBUF = temp[0][1];
 238   2                      while(!TI);
 239   2                      TI = 0;   
 240   2                    }
 241   1                    else if(pass==1)
C51 COMPILER V9.54   MAIN                                                                  07/11/2022 09:58:58 PAGE 5   

 242   1                    {
 243   2                      SBUF = temp[1][0];
 244   2                      while(!TI);
 245   2                      TI = 0;   
 246   2                      SBUF = temp[1][1];
 247   2                      while(!TI);
 248   2                      TI = 0; 
 249   2                    }
 250   1                    else if(pass==2)
 251   1                    {
 252   2                      SBUF = temp[2][0];
 253   2                      while(!TI);
 254   2                      TI = 0;   
 255   2                      SBUF = temp[2][1];
 256   2                      while(!TI);
 257   2                      TI = 0; 
 258   2                    }
 259   1                    else if(pass==3)
 260   1                    {
 261   2                      SBUF = temp[3][0];
 262   2                      while(!TI);
 263   2                      TI = 0;   
 264   2                      SBUF = temp[3][1];
 265   2                      while(!TI);
 266   2                      TI = 0; 
 267   2                    }
 268   1                    else if(pass==4)
 269   1                    {
 270   2                      SBUF = temp[4][0];
 271   2                      while(!TI);
 272   2                      TI = 0;   
 273   2                      SBUF = temp[4][1];
 274   2                      while(!TI);
 275   2                      TI = 0; 
 276   2                    }
 277   1                    else if(pass==5)
 278   1                    {
 279   2                      SBUF = temp[5][0];
 280   2                      while(!TI);
 281   2                      TI = 0;   
 282   2                      SBUF = temp[5][1];
 283   2                      while(!TI);
 284   2                      TI = 0; 
 285   2                    }
 286   1                    else if(pass==6)
 287   1                    {
 288   2                      SBUF = temp[6][0];
 289   2                      while(!TI);
 290   2                      TI = 0;   
 291   2                      SBUF = temp[6][1];
 292   2                      while(!TI);
 293   2                      TI = 0; 
 294   2                    }
 295   1                    else if(pass==7)
 296   1                    {
 297   2                      SBUF = temp[7][0];
 298   2                      while(!TI);
 299   2                      TI = 0;   
 300   2                      SBUF = temp[7][1];
 301   2                      while(!TI);
 302   2                      TI = 0; 
 303   2                    }
C51 COMPILER V9.54   MAIN                                                                  07/11/2022 09:58:58 PAGE 6   

 304   1                    else if(pass==8)
 305   1                    {
 306   2                      SBUF = temp[8][0];
 307   2                      while(!TI);
 308   2                      TI = 0;   
 309   2                      SBUF = temp[8][1];
 310   2                      while(!TI);
 311   2                      TI = 0; 
 312   2                    }
 313   1                    else if(pass==9)
 314   1                    {
 315   2                      SBUF = temp[9][0];
 316   2                      while(!TI);
 317   2                      TI = 0;   
 318   2                      SBUF = temp[9][1];
 319   2                      while(!TI);
 320   2                      TI = 0; 
 321   2                    }
 322   1                    else if(pass==10)
 323   1                    {
 324   2                      SBUF = temp[10][0];
 325   2                      while(!TI);
 326   2                      TI = 0;   
 327   2                      SBUF = temp[10][1];
 328   2                      while(!TI);
 329   2                      TI = 0; 
 330   2                    }
 331   1                    else if(pass==11)
 332   1                    {
 333   2                      SBUF = temp[11][0];
 334   2                      while(!TI);
 335   2                      TI = 0;   
 336   2                      SBUF = temp[11][1];
 337   2                      while(!TI);
 338   2                      TI = 0; 
 339   2                    }             
 340   1                    else
 341   1                    {
 342   2                    SBUF = pass;    //手机和蓝牙模块通讯时，我们可以打开电脑串口调试工具查看我们的发送值）
 343   2                    while(!TI);
 344   2                    TI = 0;  
 345   2                    }
 346   1                    }
 347          
 348          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1561    ----
   CONSTANT SIZE    =     57    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     57       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
